name: Build and Push Docker Image

on:
  push:
    branches: [ "main" ] # 指定触发分支，根据你的实际情况修改，比如可能是 master
    workflow_dispatch: # 如果需要手动触发，可以取消注释这部分

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # 步骤 1: 检出代码
      - name: Checkout repository
        uses: actions/checkout@v4

      # 步骤 2: 登录 Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 步骤 3: 提取元数据（为镜像自动生成标签）
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/suanming # 替换为你的 Docker Hub 用户名和镜像名称
          tags: |
            type=raw,value=latest,enable=true # 始终生成 latest 标签
            type=sha,prefix=,suffix=,enable=true # 根据 Git commit SHA 生成标签，便于追踪具体版本

      # 步骤 4: 构建并推送 Docker 镜像
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: . # 构建上下文为当前仓库根目录
          file: ./Dockerfile # Dockerfile 的路径，如果在根目录且名为 Dockerfile 则可省略
          push: true # 构建完成后自动推送
          tags: ${{ steps.meta.outputs.tags }} # 使用上一步生成的标签
          labels: ${{ steps.meta.outputs.labels }} # 使用上一步生成的标签
